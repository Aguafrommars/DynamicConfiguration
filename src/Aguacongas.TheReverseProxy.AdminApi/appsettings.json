{
  "Serilog": {
    "LevelSwitches": {
      "$controlSwitch": "Information"
    },
    "MinimumLevel": {
      "ControlledBy": "$controlSwitch"
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level}] {SourceContext}{NewLine}{Message:lj}{NewLine}{Exception}{NewLine}",
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Literate, Serilog.Sinks.Console"
        }
      },
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "controlLevelSwitch": "$controlSwitch",
          "apiKey": "DVYuookX2vOq078fuOyJ"
        }
      },
      {
        "Name": "Debug",
        "Args": {
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level}] {SourceContext}{NewLine}{Message:lj}{NewLine}{Exception}{NewLine}"
        }
      }
    ],
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithThreadId"
    ]
  },
  "AllowedHosts": "*",
  "ReverseProxyOptions": {
    "ReverserProxySection": "ReverseProxy"
  },
  "RedisConfigurationOptions": {
    "ConnectionString": "localhost,password=cdAp7REesz",
    "HashKey": "Aguacongas.TheReverseProxy.AdminApi",
    "Channel": "Aguacongas.TheReverseProxy.AdminApi.Channel"
  },
  "ReverseProxy": {
    // Routes tell the proxy which requests to forward
    "Routes": {
      "minimumroute": {
        // Matches anything and routes it to www.example.com
        "ClusterId": "minimumcluster",
        "Match": {
          "Path": "{**catch-all}"
        }
      },
      "route2": {
        // matches /something/* and routes to 2 external addresses
        "ClusterId": "cluster2",
        "Match": {
          "Path": "/something/{*any}"
        }
      }
    },
    // Clusters tell the proxy where and how to forward requests
    "Clusters": {
      "minimumcluster": {
        "Destinations": {
          "example.com": {
            "Address": "http://www.example.com/"
          }
        }
      },
      "cluster2": {
        "Destinations": {
          "first_destination": {
            "Address": "https://contoso.com"
          },
          "another_destination": {
            "Address": "https://bing.com"
          }
        },
        "LoadBalancingPolicy": "PowerOfTwoChoices"
      }
    }
  },
  "JwtBearerOptions": {
    "Authority": "https://localhost:5443",
    "Audience": "thereverseproxyapi",
    "TokenValidationParameters": {
      "ValidTypes": [
        "at+jwt"
      ]
    }
  },
  "OAuth2IntrospectionOptions": {
    "Authority": "https://localhost:5443",
    "ClientId": "thereverseproxyapi",
    "ClientSecret": "Th3R3v3r53Pr0xy@p1"
  },
  "OpenApiInfo": {
    "Title": "TheReverseProxy Admin API",
    "Description": "API used to manage YARP.",
    "Version": "v1",
    "Contact": {
      "Name": "Olivier Lefebvre",
      "Email": "olivier.lefebvre@live.com",
      "Url": "https://github.com/aguacongas"
    }
  },
  "OpenApiSecurityScheme": {
    "Name": "oidc",
    "Description": "OIDC api security scheme",
    "Flows": {
      "AuthorizationCode": {
        "AuthorizationUrl": "https://localhost:5443/connect/authorize",
        "TokenUrl": "https://localhost:5443/connect/token",
        "Scopes": {
          "thereverseproxyapi": "TheReverserProxy API"
        }
      }
    },
    "Type": "OAuth2",
    "OpenIdConnectUrl": "https://localhost:5443",
    "In": "Header",
    "Scheme": "Bearer",
    "Reference": {
      "Type": "SecurityScheme",
      "Id": "oidc"
    }
  },
  "SwaggerUIOptions": {
    "OAuthConfigObject": {
      "ClientId": "TheReverseProxy-swagger",
      "UsePkceWithAuthorizationCodeGrant": true
    }
  }
}
